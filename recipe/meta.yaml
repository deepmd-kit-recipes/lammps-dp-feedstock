{% set name = "lammps-dp-and-library" %}
{% set version = "1.2.2" %}
{% set lammps = "cvhd" %}
{% if cuda_compiler_version == "None" %}
{% set dp_variant = "cpu" %}
{% else %}
{% set dp_variant = "gpu" %}
{% endif %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/njzjz/lammps/archive/{{ lammps }}.tar.gz
  #sha256: 5380c1689a93d7922e3d65d9c186401d429878bb3cbe9a692580d3470d6a253f
  patches: 
    - deepmd.patch
    
build:
  number: 0
  string: "{{ PKG_BUILDNUM }}_cuda{{ cuda_compiler_version }}_{{ dp_variant }}"  # [float_prec == 'high']
  string: "{{ PKG_BUILDNUM }}_cuda{{ cuda_compiler_version }}_{{ dp_variant }}_{{float_prec}}"  # [float_prec != 'high']
  noarch: python
  skip: True  # [not linux]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - make
  
  host:
    - python
    - libdeepmd {{ version }} *{{ dp_variant }}  # [float_prec == 'high']
    - libdeepmd {{ version }} *{{ dp_variant }}_{{ float_prec }}  # [float_prec != 'high'] 
    - cudatoolkit {{ cuda_compiler_version }}* # [cuda_compiler_version != 'None']
    - plumed
    - mpich
    - zlib
    - fftw
    - libpng
    - jpeg

outputs:
  - name: liblammps-dp
    files:
      - lib/liblammps.so*
      - lib/pkgconfig/liblammps.pc
      - share/cmake/Modules/FindLAMMPS.cmake
      - share/lammps
      - share/man/man1/lmp*
    requirements:
      host:
        - libdeepmd {{ version }} *{{ dp_variant }}  # [float_prec == 'high']
        - libdeepmd {{ version }} *{{ dp_variant }}_{{ float_prec }}  # [float_prec != 'high'] 
        - cudatoolkit {{ cuda_compiler_version }}* # [cuda_compiler_version != 'None']
        - plumed
        - mpich
        - zlib
        - fftw
        - libpng
        - jpeg
      run:
        - {{ pin_compatible('libdeepmd', exact=True) }}
        - {{ pin_compatible('mpich') }}
        - {{ pin_compatible('cudatoolkit', max_pin='x.x') }} # [cuda_compiler_version != 'None']
        - plumed >=2
        - fftw
        - libpng
        - jpeg
    test:
      commands:
        - test -f $PREFIX/lib/liblammps.so
      
  - name: lammps-dp
    files:
      - bin/lmp
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      host:
        - {{ pin_subpackage('liblammps-dp', exact=True) }}
      run:
        - {{ pin_subpackage('liblammps-dp', exact=True) }}
    test:
      #files:
        #- input.lammps
        #- water.lmp
        #- frozen_model.pb  # [float_prec == 'high']
        #- frozen_model_low.pb  # [float_prec == 'low']
      commands: 
        - lmp -help
        #- mv frozen_model_low.pb frozen_model.pb  # [float_prec == 'low']
        #- lmp -in input.lammps

  - name: pylammps-dp
    build:
      noarch: python
    files:
      - lib/python*/site-packages/lammps.py
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('liblammps-dp', max_pin='x.x') }}
    test:
      imports:
        - lammps

about:
  home: http://lammps.sandia.gov
  license: GPL-2.0
  license_family: GPL
  license_file: LICENSE
  summary: 'LAMMPS stands for Large-scale Atomic/Molecular Massively Parallel Simulator.'

  description: |
    LAMMPS is a classical molecular dynamics simulation code designed to
    run efficiently on parallel computers.  It was developed at Sandia
    National Laboratories, a US Department of Energy facility, with
    funding from the DOE.  It is an open-source code, distributed freely
    under the terms of the GNU Public License (GPL).
  doc_url: http://lammps.sandia.gov/doc/Manual.html
  dev_url: https://github.com/lammps/lammps

extra:
  recipe-maintainers:
    - njzjz
